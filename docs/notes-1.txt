    â€¢ be able to control it properly
        â—¦ simulation, when to apply control
        â—¦ control: quaternions
        â—¦ control: forward, reverse kinematics...
        â—¦ control: different kind of controls via position or velocity and othersâ€¦
        â—¦ how to simulate mechanical inaccuracies
    â€¢ now maybe need a policy or something: combination of hardcoded movement. Then step by step make it more autonomous. Include tactile and visual sensors.
        â—¦ At which point does it even make sense to apply AI

    â€¢ control advanced
        â—¦ ROS
        â—¦ inaccuracies:    how to deal with inaccuracies and how to adopt policy to real world etc...
            â–ª  Joint friction &  damping â†’ Models gear friction & lubrication
            â–ª ðŸ”¹ Backlash (Loose joints) â†’ Simulates imperfect mechanical fits
            â–ª ðŸ”¹ Sensor noise â†’ Mimics encoder inaccuracies
            â–ª ðŸ”¹ Actuation delay â†’ Accounts for control lag
            â–ª ðŸ”¹ External disturbances â†’ Adds vibration & unexpected forces
            â–ª ðŸ”¹ Soft constraints â†’ Simulates elasticity in the structure
        â—¦ switch control mode dependent of in touch with object or not, also switch sense input etcâ€¦   use AI to make this switch intelligent

    â€¢ hardware: donâ€™t use a hand, but use multi finger gripper with x amount of fingers. For sensor try different sensorsâ€¦



    â€¢ observation space. Action space. For action space do it with variable granularity. Depending on what is observed. Different kind of controls: position control vs force controls
    â€¢ and make learning very efficience: maybe something like ken. Guided reinforcement learning.



    â€¢ Torque = J*qâ€™â€™+Friction*qâ€™+F_touchsensor*finger_length
        â—¦ could calculate necessary torque with touchsensor information
        â—¦ however due to q being almost zero equation simplifies to Torque = F_touchsensor*finger_length. In thaat regards touchsensors do not add that much of informations. Only when q != 0.   â†’ one could say touch sensors are important to not destroy objects to reduce pressureâ€¦, in case object is smalcan you hide all foldersl.


-------â†’ 1. focus on control switch from position/velocity to force control
-------â†’ 2. focus on using touch sensors to not destroy objects
-------â†’ 3. focus on finding nice grasps/also maybe regrasps. For example grasping the handle of a tea cup. Therefore tactile array sensor are of great value, because they can detect where exactly the object is at the finger.

-------â†’ 4. in the end focus on improving inaccuracies when transfering to real world



Reward function: after applying forces in different directions on object.

Shaped rewards. Closeness of end efector to object.




Action space:
MODE:
position/velocity controls:
- 
torque control:
- torque

GRANULARITY


Observation space:





PREPARE INPUT AND OUTPUT SPACE FOR REINFORCEMENT LEARNING:
- get a robot with very less degrees of freedom. Make objects first very simple.